"""create energy storage measurement table

Revision ID: dfa8d55090da
Revises: 631f7e68f91a
Create Date: 2025-07-04 13:29:03.036914

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'dfa8d55090da'
down_revision: Union[str, None] = '631f7e68f91a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cerbo_measurements',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата и время сохранения записи в БД'),
    sa.Column('measured_at', sa.DateTime(), nullable=False, comment='Дата и время измерения, полученное с устройства'),
    sa.Column('object_name', sa.String(), nullable=True),
    sa.Column('general_battery_power', sa.Float(), nullable=False),
    sa.Column('inverter_total_ac_output', sa.Float(), nullable=False),
    sa.Column('ess_total_input_power', sa.Float(), nullable=False),
    sa.Column('solar_total_pv_power', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cerbo_measurements_object_name'), 'cerbo_measurements', ['object_name'], unique=False)
    op.create_table('blood_pressure_measurements',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('systolic_pressure', sa.Integer(), nullable=False, comment='Систолическое (верхнее) артериальное давление'),
    sa.Column('diastolic_pressure', sa.Integer(), nullable=False, comment='Диастолическое (нижнее) артериальное давление'),
    sa.Column('pulse', sa.Integer(), nullable=False, comment='Частота сердечных сокращений (пульс)'),
    sa.Column('measured_at', sa.DateTime(), nullable=False, comment='Дата и время измерения, полученное с устройства'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата и время сохранения записи в БД'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_bpm_measured_at', 'blood_pressure_measurements', ['measured_at'], unique=False)
    op.create_index('idx_bpm_user_id', 'blood_pressure_measurements', ['user_id'], unique=False)
    op.create_index(op.f('ix_blood_pressure_measurements_user_id'), 'blood_pressure_measurements', ['user_id'], unique=False)
    op.create_table('doctor_diagnoses',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('report_id', sa.String(length=36), nullable=False),
    sa.Column('doctor_id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('immunohistochemical_profile', sa.Text(), nullable=True),
    sa.Column('molecular_genetic_profile', sa.Text(), nullable=True),
    sa.Column('pathomorphological_diagnosis', sa.Text(), nullable=True),
    sa.Column('icd_code', sa.String(length=50), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('report_macrodescription', sa.Text(), nullable=True),
    sa.Column('report_microdescription', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['doctor_id'], ['doctors.doctor_id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['reports.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('cases', sa.Column('case_owner', sa.String(length=36), nullable=True))
    op.add_column('cases', sa.Column('closing_date', sa.DateTime(), nullable=True))
    op.create_foreign_key(None, 'cases', 'doctors', ['case_owner'], ['doctor_id'])
    op.add_column('referrals', sa.Column('biomaterial_date', sa.DateTime(), nullable=True, comment='Дата забора биоматериала'))
    op.add_column('report_signatures', sa.Column('diagnosis_entry_id', sa.String(length=36), nullable=True))
    op.create_unique_constraint(None, 'report_signatures', ['diagnosis_entry_id'])
    op.drop_constraint('report_signatures_report_id_fkey', 'report_signatures', type_='foreignkey')
    op.create_foreign_key(None, 'report_signatures', 'doctor_diagnoses', ['diagnosis_entry_id'], ['id'])
    op.drop_column('report_signatures', 'report_id')
    op.drop_column('reports', 'icd_code')
    op.drop_column('reports', 'molecular_genetic_profile')
    op.drop_column('reports', 'comment')
    op.drop_column('reports', 'pathomorphological_diagnosis')
    op.drop_column('reports', 'immunohistochemical_profile')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('reports', sa.Column('immunohistochemical_profile', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('pathomorphological_diagnosis', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('molecular_genetic_profile', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('reports', sa.Column('icd_code', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
    op.add_column('report_signatures', sa.Column('report_id', sa.VARCHAR(length=36), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'report_signatures', type_='foreignkey')
    op.create_foreign_key('report_signatures_report_id_fkey', 'report_signatures', 'reports', ['report_id'], ['id'])
    op.drop_constraint(None, 'report_signatures', type_='unique')
    op.drop_column('report_signatures', 'diagnosis_entry_id')
    op.drop_column('referrals', 'biomaterial_date')
    op.drop_constraint(None, 'cases', type_='foreignkey')
    op.drop_column('cases', 'closing_date')
    op.drop_column('cases', 'case_owner')
    op.drop_table('doctor_diagnoses')
    op.drop_index(op.f('ix_blood_pressure_measurements_user_id'), table_name='blood_pressure_measurements')
    op.drop_index('idx_bpm_user_id', table_name='blood_pressure_measurements')
    op.drop_index('idx_bpm_measured_at', table_name='blood_pressure_measurements')
    op.drop_table('blood_pressure_measurements')
    op.drop_index(op.f('ix_cerbo_measurements_object_name'), table_name='cerbo_measurements')
    op.drop_table('cerbo_measurements')
    # ### end Alembic commands ###
