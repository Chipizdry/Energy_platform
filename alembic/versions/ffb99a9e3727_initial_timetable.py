"""initial_timetable

Revision ID: ffb99a9e3727
Revises: dfa8d55090da
Create Date: 2025-07-15 12:58:47.236201

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ffb99a9e3727'
down_revision: Union[str, None] = 'dfa8d55090da'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('energetic_schedule',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('start_time', sa.Time(), nullable=False, comment='Время начала работы режима (ЧЧ:ММ)'),
    sa.Column('duration', sa.Interval(), nullable=False, comment='Продолжительность режима (например, 2 часа 30 минут)'),
    sa.Column('end_time', sa.Time(), nullable=False, comment='Время окончания работы режима (ЧЧ:ММ)'),
    sa.Column('grid_feed_w', sa.Integer(), nullable=False, comment='Параметр отдачи в сеть (Вт)'),
    sa.Column('battery_level_percent', sa.Integer(), nullable=False, comment='Целевой уровень батареи (%)'),
    sa.Column('charge_battery', sa.Boolean(), nullable=False, comment='Флаг: заряжать батарею в этом режиме'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Флаг: активно ли это расписание'),
    sa.Column('is_manual_mode', sa.Boolean(), nullable=False, comment='Флаг: находится ли инвертор в ручном режиме'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('cases', sa.Column('is_printed_cassette', sa.Boolean(), nullable=True))
    op.add_column('cases', sa.Column('is_printed_glass', sa.Boolean(), nullable=True))
    op.add_column('cases', sa.Column('is_printed_qr', sa.Boolean(), nullable=True))
    op.add_column('cassettes', sa.Column('is_printed', sa.Boolean(), nullable=True))
    op.add_column('glasses', sa.Column('is_printed', sa.Boolean(), nullable=True))
    op.add_column('patients', sa.Column('user_id', sa.String(length=36), nullable=True))
    op.alter_column('patients', 'patient_cor_id',
               existing_type=sa.VARCHAR(length=36),
               type_=sa.String(length=250),
               existing_nullable=False)
    op.create_unique_constraint(None, 'patients', ['user_id'])
    op.drop_constraint('patients_patient_cor_id_fkey', 'patients', type_='foreignkey')
    op.create_foreign_key(None, 'patients', 'users', ['user_id'], ['id'])
    op.add_column('samples', sa.Column('is_printed_cassette', sa.Boolean(), nullable=True))
    op.add_column('samples', sa.Column('is_printed_glass', sa.Boolean(), nullable=True))
    op.create_unique_constraint('uq_user_device_session', 'user_sessions', ['user_id', 'device_info'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_user_device_session', 'user_sessions', type_='unique')
    op.drop_column('samples', 'is_printed_glass')
    op.drop_column('samples', 'is_printed_cassette')
    op.drop_constraint(None, 'patients', type_='foreignkey')
    op.create_foreign_key('patients_patient_cor_id_fkey', 'patients', 'users', ['patient_cor_id'], ['cor_id'])
    op.drop_constraint(None, 'patients', type_='unique')
    op.alter_column('patients', 'patient_cor_id',
               existing_type=sa.String(length=250),
               type_=sa.VARCHAR(length=36),
               existing_nullable=False)
    op.drop_column('patients', 'user_id')
    op.drop_column('glasses', 'is_printed')
    op.drop_column('cassettes', 'is_printed')
    op.drop_column('cases', 'is_printed_qr')
    op.drop_column('cases', 'is_printed_glass')
    op.drop_column('cases', 'is_printed_cassette')
    op.drop_table('energetic_schedule')
    # ### end Alembic commands ###
